plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group 'com.kazurayam'
version '0.1.0-SNAPSHOT'

gradlePlugin {
    plugins {
        inspectusPlugin {
            id = 'com.kazurayam.inspectus-gradle-plugin'
            implementationClass = 'com.kazurayam.inspectus.gradle.GreetingPlugin'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    gradleApi()
    localGroovy()
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

//---------------------------------------------------------------------
interface GreetingPluginExtension {
    Property<String> getMessage()
    Property<String> getGreeter()
}
class GreetingPlugin implements Plugin<Project> {
    void apply(Project project) {
        def extension = project.extensions.create('greeting', GreetingPluginExtension)
        project.task('hello') {
            doLast {
                println "${extension.message.get()} from ${extension.greeter.get()}"
            }
        }
    }
}

apply plugin: GreetingPlugin

// Configure the extension using a DSL block
greeting {
    message = 'Hi'
    greeter = 'Gradle'
}


//---------------------------------------------------------------------

abstract class GreetingToFileTask extends DefaultTask {

    @OutputFile
    abstract RegularFileProperty getDestination()

    @TaskAction
    def greet() {
        def file = getDestination().get().asFile
        file.parentFile.mkdirs()
        file.write 'Hello!'
    }
}

def greetingFile = objects.fileProperty()

tasks.register('greet', GreetingToFileTask) {
    destination = greetingFile
}

tasks.register('sayGreeting') {
    dependsOn greet
    doLast {
        def file = greetingFile.get().asFile
        println "${file.text} (file: ${file.name})"
    }
}

greetingFile.set(layout.buildDirectory.file('hello.txt'))

test {
    useJUnitPlatform()
}